name: 'Linting'

on: push

env:
  PYTHON_VERSION: "3.11"
  POETRY_VERSION: "1.7.0"

jobs:
  linting:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v40
        with:
          files: |
            **.py

      - name: Installing Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
          cache: 'poetry'

      - name: Install codestyle dependencies
        run: poetry install --only codestyle

      - name: Checking the order of imports with isort
        shell: bash
        id: isort
        continue-on-error: true
        run: |
          poetry run python -m isort --version
          poetry run python -m isort --settings-file ./pyproject.toml --check .

      - name: Checking formatting with black
        shell: bash
        id: black
        continue-on-error: true
        run: |
          poetry run python -m black --version
          poetry run python -m black --check .

      - name: Linting with pylint
        shell: bash
        id: pylint
        continue-on-error: true
        run: |
          poetry run python -m pylint --version
          
          if [ "${{ steps.changed-files.outputs.all_changed_files }}" = "" ]
          then 
            echo "There are no modified Python files."
            exit 0;
          else
            poetry run python -m pylint "${{ steps.changed-files.outputs.all_changed_files }}"
          fi

      - name: Check all steps
        shell: bash
        if: steps.isort.outcome != 'success'  || steps.black.outcome != 'success' || steps.pylint.outcome != 'success'
        run: |
          exit 1